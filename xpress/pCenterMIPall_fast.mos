model pCenterMIPall_fast
uses "mmxprs"; !gain access to the Xpress-Optimizer solver
uses "mmsystem";

!optional parameters section

stime:= gettime	!Initialize the System Clock to determine computation time
!declaration of arrays and variables
declarations
  index=1..55
  n=55
  x: array(index,index) of mpvar
  points: array(index,1..4) of integer
  dist: array(index,index) of integer
  smax: real
  cover: array(index) of linctr
  SMaxObj:linctr
  !DistCon: array(index,index) of linctr
  DistCon: array(index) of linctr
  pFacCon: linctr
  SelfAssign: array(index,index) of linctr
  smax_squared: mpvar 
  kindex: real
  smax_bm: real
  smax_LB: linctr
    
  !zvalindex: set of integer
  !soSet: set of integer
end-declarations


points:: [01, 32, 31, 71,
02, 29, 32, 62,
03, 27, 36, 56,
04, 29, 29, 39,
05, 32, 29, 35,
06, 26, 25, 21,
07, 24, 33, 20,
08, 30, 35, 19,
09, 29, 27, 17,
10, 29, 21, 17,
11, 33, 28, 16,
12, 17, 53, 15,
13, 34, 30, 14,
14, 25, 60, 12,
15, 21, 28, 12,
16, 30, 51, 11,
17, 19, 47, 10,
18, 17, 33, 10,
19, 22, 40, 9,
20, 25, 14, 9,
21, 29, 12, 9,
22, 24, 48, 8,
23, 17, 42, 8,
24, 6, 26, 8,
25, 19, 21, 8,
26, 10, 32, 7,
27, 34, 56, 6,
28, 12, 47, 6,
29, 19, 38, 6,
30, 27, 41, 6,
31, 21, 35, 6,
32, 32, 45, 5,
33, 27, 45, 5,
34, 32, 38, 5,
35, 8, 22, 5,
36, 15, 25, 5,
37, 35, 16, 5,
38, 36, 47, 4,
39, 46, 51, 4,
40, 50, 40, 4,
41, 23, 22, 4,
42, 27, 30, 4,
43, 38, 39, 4,
44, 36, 32, 4,
45, 32, 41, 3,
46, 42, 36, 3,
47, 36, 26, 3,
48, 15, 19, 3,
49, 19, 14, 3,
50, 45, 19, 3,
51, 27, 5, 3,
52, 52, 24, 2,
53, 40, 22, 2,
54, 40, 52, 2,
55, 42, 42, 2]

forall(i in index, j in index) do
	dist(i,j):= (points(i,2)-points(j,2))*(points(i,2)-points(j,2)) + (points(i,3)-points(j,3))*(points(i,3)-points(j,3))
	!zvalindex += {dist(i,j)}
end-do

!smax_bm:= max(i in soSet) soSet(i)	!Initialize the Base Coverage distance with 0 to start the model
smax_bm:= 10000


forall(k in index) do !1..n-1) do !Go through each facility
	stime2:=gettime
	kindex:= k
	SMaxObj:= smax_squared
	
	!smax_squared is_integer

!Constrain smax
	!smax_LB:= smax_squared <= smax_bm

!Assignment from j only if facility  j is located

	forall(i in index, j in index | i<>j and dist(i,j) <= smax_bm) do
	  SelfAssign(i,j):= x(j,j) >= x(i,j)
	  !x(j,j) >= x(i,j)
	end-do
	
	!	forall(j in index) do
	!			n*x(j,j) - sum(i in index) x(i,j) >= 0
	!	end-do
	
!Cover one facility
	forall(i in index) do
	  cover(i):= sum(j in index | dist(i,j) <= smax_bm) x(i,j) = 1
	end-do

!Locate p-Facilities
	pFacCon:= sum(i in index) x(i,i)=kindex
	

!Assignment only under smax_squarred
	forall(i in index) do
		DistCon(i):= smax_squared >= sum(j in index | dist(i,j) <= smax_bm) dist(i,j)*x(i,j)
	end-do
	
	!	forall(i in index, j in index) do
	!	  	DistCon(i,j):= smax_squared >= dist(i,j) * x(i,j)
	!	end-do

forall (j in index, i in index | dist(i,j)<= smax_bm) x(i,j) is_binary


minimize (SMaxObj)
smax:=getsol(smax_squared)
smax_bm:=smax
writeln("Number of Facilities = ", kindex)
writeln("Coverage Distance = ", smax^(0.5)) !smax_squared)
writeln("Time Elapsed: ", gettime)
stime2:=gettime-stime2
writeln("Solution Time: ", stime2)
writeln("")


end-do  ! for repitition of model solving (in this case, k)

stime:= gettime - stime
writeln("Computation Time: ", stime)

end-model
